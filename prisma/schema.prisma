// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  password String
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product_Category{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  description String?
  active Boolean @default(true)
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  description String?
  price Float?
  quantity Int?
  category Product_Category @relation(fields: [categoryId], references: [id])
  categoryId String @db.ObjectId
  rentalId String[] @db.ObjectId
  raltals  Rental[] @relation(fields: [rentalId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rental{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  start_date DateTime?
  end_date DateTime?
  rental_duration Int?
  rental_fee Float?
  status String?
  productId String[] @db.ObjectId
  products Product[] @relation(fields: [productId], references: [id])
  rental_history Rental_history?
  CreateAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rental_history{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  status String?
  createdAt DateTime @default(now())
  rental Rental @relation(fields: [rentalId], references: [id])
  rentalId String @unique @db.ObjectId
}
